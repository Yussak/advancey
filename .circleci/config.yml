version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.12.2

jobs:
  test_backend:
    docker:
      - image: circleci/ruby:3.0.2-node
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
      - image: circleci/mysql:8.0.27
    working_directory: ~/portfolio_app

    steps:
      - checkout
      # restore gem from cache
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "~/portfolio_app/api/Gemfile.lock" }}
            - gem-cache-v1-
          working_directory: ~/portfolio_app/api
      # gem install
      - run:
          command: |
            gem install bundler
            bundle config set path 'vendor/bundle'
            bundle install --jobs=4 --retry=3
          working_directory: ~/portfolio_app/api
      - save_cache:
          key: gem-cache-v1-{{ checksum "~/portfolio_app/api/Gemfile.lock" }}
          paths:
            - ~/portfolio_app/api/vendor/bundle
          working_directory: ~/portfolio_app/api
      # Database setup
      - run:
          command: bundle exec rails db:create
          working_directory: ~/portfolio_app/api
      - run:
          command: bundle exec rails db:migrate
          working_directory: ~/portfolio_app/api
      - run:
          name: create directory to store test results
          command: mkdir /tmp/test-results
          working_directory: ~/portfolio_app/api
      # run tests
      - run:
          name: RSpec
          command: |
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings) \
              || (printf "====== RETRYING...\n\n\n"; bundle exec rspec --only-failures)
          working_directory: ~/portfolio_app/api

  test_frontend:
    docker:
      - image: circleci/node:14.3
        environment:
          NODE_ENV: test
    working_directory: ~/portfolio_app
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "~/portfolio_app/front/package.json" }}
          working_directory: ~/portfolio_app/front
      - run:
          name: install-packages
          command: npm install
          working_directory: ~/portfolio_app/front
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "~/portfolio_app/front/package.json" }}
          working_directory: ~/portfolio_app/front
      - run:
          name: Jest
          command: npm run test
          working_directory: ~/portfolio_app/front

  build_and_push_image_backend:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - aws-ecr/build-and-push-image:
          account-url: AWS_ACCOUNT_URL
          repo: "advancey"
          region: AWS_REGION
          tag: "${CIRCLE_SHA1}"
          path: ./api/

  build_and_push_image_frontend:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - aws-ecr/build-and-push-image:
          account-url: AWS_ACCOUNT_URL
          repo: "advancey"
          region: AWS_REGION
          tag: "${CIRCLE_SHA1}"
          path: ./front/

workflows:
  version: 2
  test:
    jobs:
      - test_frontend
      - test_backend
      - build_and_push_image_backend:
          requires:
            - test_frontend
            - test_backend
          # filters:
          #   branches:
          #     only: master
      - build_and_push_image_frontend:
          requires:
            - test_frontend
            - test_backend
          # filters:
          #   branches:
          #     only: master
  # test:
  #   jobs:
  #     - test_backend
  #     - test_frontend
  # test_and_deploy:
  #   jobs:
  #     - test_backend:
  #         filters:
  #           branches:
  #             only: master
  #     - test_frontend:
  #         filters:
  #           branches:
  #             only: master